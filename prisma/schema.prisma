// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/**
 * ================= USERS & ROLES (NextAuth) =================
 */

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  roleId String?
  role   Role?   @relation(fields: [roleId], references: [id])

  accounts Account[]
  sessions Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([roleId])
}

model Role {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?
  users       User[]
}

/**
 * =============== NextAuth standard (MySQL) ===============
 */

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String

  refresh_token String? @db.Text
  access_token  String? @db.Text
  expires_at    Int?
  token_type    String?
  scope         String?
  id_token      String? @db.Text
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([expires])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/**
 * ===================== ASSET CORE =====================
 */

model AssetType {
  id          String  @id @default(cuid())
  name        String  @unique // เช่น ครุภัณฑ์สำนักงาน, คอมพิวเตอร์
  description String? @db.Text
  assets      Asset[]
}

model AssetStatus {
  id          String  @id @default(cuid())
  name        String  @unique // ใช้งานอยู่, ซ่อมบำรุง, ชำรุด, จำหน่าย
  description String? @db.Text
  assets      Asset[]
}

model Location {
  id          String  @id @default(cuid())
  building    String?
  room        String?
  floor       String?
  description String? @db.Text
  assets      Asset[]
}

model Staff {
  id       String  @id @default(cuid())
  fullName String
  position String?
  phone    String?
  email    String? @unique
  assets   Asset[]
}

model Asset {
  id        String    @id @default(cuid())
  assetCode String    @unique // รหัสครุภัณฑ์ เช่น EDU-001
  assetName String
  typeId    String
  type      AssetType @relation(fields: [typeId], references: [id])

  brand        String?
  model        String?
  serialNo     String?
  purchaseDate DateTime?
  price        Decimal? @db.Decimal(10, 2) // Better for currency
  warrantyExp  DateTime?

  statusId String      
  status   AssetStatus @relation(fields: [statusId], references: [id])

  locationId String?   
  location   Location? @relation(fields: [locationId], references: [id])

  staffId String? 
  staff   Staff?  @relation(fields: [staffId], references: [id])

  note String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([typeId])
  @@index([statusId])
  @@index([locationId])
  @@index([staffId])
  @@index([serialNo])
  @@index([assetCode])
}